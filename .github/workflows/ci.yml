name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: yarn install

    - name: Install Playwright browsers
      run: yarn playwright install

    - name: Verify vitest installation
      run: yarn list vitest

    - name: Start the development server
      run: |
        yarn dev > server.log 2>&1 &
        sleep 5
        cat server.log

    - name: Wait for server to be up
      run: |
        for i in $(seq 1 60); do
          curl -s http://127.0.0.1:5173 > /dev/null && break
          echo "Waiting for server... ($i)"
          sleep 1
        done
        curl -s http://127.0.0.1:5173

    - name: Run unit tests
      run: yarn test:unit

    - name: Run e2e tests
      run: yarn test:e2e

    - name: Build the project
      run: yarn build

    - name: Print working directory (build-test)
      run: pwd

    - name: List build directory contents
      run: ls -al ./dist  # Verify the contents of the build directory

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Ensure gh-pages branch exists
      run: |
        git fetch origin
        if ! git rev-parse --verify origin/gh-pages; then
          git checkout --orphan gh-pages
          git reset --hard
          git commit --allow-empty -m "Initial gh-pages commit"
          git push origin gh-pages
        fi
    - name: Print working directory (deploy)
      run: pwd

    - name: List root directory deploy
      run: ls -al ./dist

    - name: Checkout gh-pages branch
      run: |
        git checkout gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Copy build files to gh-pages branch
      run: |
        if [ -d ./dist ]; then  # Check if dist directory exists
          cp -r $GITHUB_WORKSPACE/dist/* ./
          git add --all
          git commit -m "deploy: ${{ github.sha }}"
        else
          echo "dist directory not found. Skipping copy."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: List root directory contents after copy
      run: ls -al

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./dist  